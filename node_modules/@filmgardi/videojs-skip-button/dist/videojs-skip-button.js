/*! @name @filmgardi/videojs-skip-button @version 2.0.2 @license MIT */
(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('video.js')) :
	typeof define === 'function' && define.amd ? define(['video.js'], factory) :
	(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojsSkipButton = factory(global.videojs));
})(this, (function (videojs) { 'use strict';

	function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

	var videojs__default = /*#__PURE__*/_interopDefaultLegacy(videojs);

	function createCommonjsModule(fn, basedir, module) {
		return module = {
		  path: basedir,
		  exports: {},
		  require: function (path, base) {
	      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
	    }
		}, fn(module, module.exports), module.exports;
	}

	function commonjsRequire () {
		throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
	}

	var setPrototypeOf = createCommonjsModule(function (module) {
	  function _setPrototypeOf(o, p) {
	    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	      o.__proto__ = p;
	      return o;
	    };

	    module.exports["default"] = module.exports, module.exports.__esModule = true;
	    return _setPrototypeOf(o, p);
	  }

	  module.exports = _setPrototypeOf;
	  module.exports["default"] = module.exports, module.exports.__esModule = true;
	});

	var inheritsLoose = createCommonjsModule(function (module) {
	  function _inheritsLoose(subClass, superClass) {
	    subClass.prototype = Object.create(superClass.prototype);
	    subClass.prototype.constructor = subClass;
	    setPrototypeOf(subClass, superClass);
	  }

	  module.exports = _inheritsLoose;
	  module.exports["default"] = module.exports, module.exports.__esModule = true;
	});

	var version = "2.0.2";

	var Dom = videojs__default["default"].dom;
	var Button = videojs__default["default"].getComponent("Button");

	var SkipButton = /*#__PURE__*/function (_Button) {
	  inheritsLoose(SkipButton, _Button);

	  function SkipButton(player, options) {
	    var _this;

	    _this = _Button.call(this, player, options) || this;
	    _this.player_ = player;
	    _this.options = options;

	    _this.player_.ready(function () {
	      var intervalId = _this.setInterval(function () {
	        var _this$options_ = _this.options_,
	            from = _this$options_.from,
	            to = _this$options_.to;

	        if (!_this.player_.paused()) {
	          if (_this.player_.currentTime() > from && _this.player_.currentTime() < to) {
	            _this.show();
	          }

	          if (_this.player_.currentTime() > to) {
	            _this.hide();

	            clearInterval(intervalId);
	          }
	        }
	      }, 250);
	    });

	    return _this;
	  }

	  var _proto = SkipButton.prototype;

	  _proto.setupPosition = function setupPosition(el) {
	    // Setup position
	    var _this$options_2 = this.options_,
	        offsetH = _this$options_2.offsetH,
	        offsetV = _this$options_2.offsetV,
	        position = _this$options_2.position;
	    var emOffsetH = offsetH / 10;
	    var emOffsetV = offsetV / 10;

	    switch (position) {
	      case "top-left":
	        el.style.top = emOffsetV + "em";
	        el.style.left = emOffsetH + "em";
	        break;

	      case "top-right":
	        el.style.top = emOffsetV + "em";
	        el.style.right = emOffsetH + "em";
	        break;

	      case "bottom-left":
	        el.style.bottom = emOffsetV + "em";
	        el.style.left = emOffsetH + "em";
	        break;

	      case "bottom-right":
	        el.style.bottom = emOffsetV + "em";
	        el.style.right = emOffsetH + "em";
	        break;

	      default:
	        el.style.top = emOffsetV + "em";
	        el.style.right = emOffsetH + "em";
	    }
	  };

	  _proto.handleClick = function handleClick() {
	    this.player_.currentTime(this.options_.to);
	  };

	  _proto.createEl = function createEl() {
	    var _this$options_3 = this.options_,
	        text = _this$options_3.text,
	        from = _this$options_3.from,
	        to = _this$options_3.to;
	        _this$options_3.style;

	    if (!from || !to) {
	      videojs__default["default"].log("Initial data is required.{ from:0s, to:0s }");
	    }

	    var el = _Button.prototype.createEl.call(this, "div", {
	      className: "vjs-fg-skip-button vjs-hidden"
	    });

	    var textLabel = Dom.createEl("span");
	    textLabel.className = "vjs-fg-skip-button-label";
	    textLabel.innerHTML = this.player_.localize(text);
	    this.setupPosition(el);
	    el.appendChild(textLabel);
	    return el;
	  };

	  return SkipButton;
	}(Button);

	var Plugin = videojs__default["default"].getPlugin("plugin"); // Default options for the plugin.

	var defaults = {
	  text: "Skip sss",
	  from: 0,
	  to: 60,
	  position: 'bottom-right',
	  offsetH: 46,
	  offsetV: 96
	};
	/**
	 * An advanced Video.js plugin. For more information on the API
	 *
	 * See: https://blog.videojs.com/feature-spotlight-advanced-plugins/
	 */

	var Skip = /*#__PURE__*/function (_Plugin) {
	  inheritsLoose(Skip, _Plugin);

	  /**
	   * Create a Skip plugin instance.
	   *
	   * @param  {Player} player
	   *         A Video.js Player instance.
	   *
	   * @param  {Object} [options]
	   *         An optional options object.
	   *
	   *         While not a core part of the Video.js plugin architecture, a
	   *         second argument of options is a convenient way to accept inputs
	   *         from your plugin's caller.
	   */
	  function Skip(player, options) {
	    var _this;

	    // the parent class will add player under this.player
	    _this = _Plugin.call(this, player) || this;
	    _this.options = videojs__default["default"].mergeOptions(defaults, options);

	    _this.player.ready(function () {
	      _this.skipButton = new SkipButton(_this.player, _this.options);

	      _this.player.addClass("vjs-fg-skip");

	      _this.player.addChild(_this.skipButton);

	      videojs__default["default"].log("Create Skip-Button");
	    });

	    return _this;
	  }

	  return Skip;
	}(Plugin); // Define default values for the plugin's `state` object here.


	Skip.defaultState = {}; // Include the version number.

	Skip.VERSION = version; // Register the plugin with video.js.

	videojs__default["default"].registerPlugin("skipButton", Skip);

	return Skip;

}));
