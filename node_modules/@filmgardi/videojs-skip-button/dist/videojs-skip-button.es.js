/*! @name @filmgardi/videojs-skip-button @version 2.0.2 @license MIT */
import _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';
import videojs from 'video.js';

var version = "2.0.2";

var Dom = videojs.dom;
var Button = videojs.getComponent("Button");

var SkipButton = /*#__PURE__*/function (_Button) {
  _inheritsLoose(SkipButton, _Button);

  function SkipButton(player, options) {
    var _this;

    _this = _Button.call(this, player, options) || this;
    _this.player_ = player;
    _this.options = options;

    _this.player_.ready(function () {
      var intervalId = _this.setInterval(function () {
        var _this$options_ = _this.options_,
            from = _this$options_.from,
            to = _this$options_.to;

        if (!_this.player_.paused()) {
          if (_this.player_.currentTime() > from && _this.player_.currentTime() < to) {
            _this.show();
          }

          if (_this.player_.currentTime() > to) {
            _this.hide();

            clearInterval(intervalId);
          }
        }
      }, 250);
    });

    return _this;
  }

  var _proto = SkipButton.prototype;

  _proto.setupPosition = function setupPosition(el) {
    // Setup position
    var _this$options_2 = this.options_,
        offsetH = _this$options_2.offsetH,
        offsetV = _this$options_2.offsetV,
        position = _this$options_2.position;
    var emOffsetH = offsetH / 10;
    var emOffsetV = offsetV / 10;

    switch (position) {
      case "top-left":
        el.style.top = emOffsetV + "em";
        el.style.left = emOffsetH + "em";
        break;

      case "top-right":
        el.style.top = emOffsetV + "em";
        el.style.right = emOffsetH + "em";
        break;

      case "bottom-left":
        el.style.bottom = emOffsetV + "em";
        el.style.left = emOffsetH + "em";
        break;

      case "bottom-right":
        el.style.bottom = emOffsetV + "em";
        el.style.right = emOffsetH + "em";
        break;

      default:
        el.style.top = emOffsetV + "em";
        el.style.right = emOffsetH + "em";
    }
  };

  _proto.handleClick = function handleClick() {
    this.player_.currentTime(this.options_.to);
  };

  _proto.createEl = function createEl() {
    var _this$options_3 = this.options_,
        text = _this$options_3.text,
        from = _this$options_3.from,
        to = _this$options_3.to;
        _this$options_3.style;

    if (!from || !to) {
      videojs.log("Initial data is required.{ from:0s, to:0s }");
    }

    var el = _Button.prototype.createEl.call(this, "div", {
      className: "vjs-fg-skip-button vjs-hidden"
    });

    var textLabel = Dom.createEl("span");
    textLabel.className = "vjs-fg-skip-button-label";
    textLabel.innerHTML = this.player_.localize(text);
    this.setupPosition(el);
    el.appendChild(textLabel);
    return el;
  };

  return SkipButton;
}(Button);

var Plugin = videojs.getPlugin("plugin"); // Default options for the plugin.

var defaults = {
  text: "Skip intro",
  from: 0,
  to: 60,
  position: 'bottom-right',
  offsetH: 46,
  offsetV: 96
};
/**
 * An advanced Video.js plugin. For more information on the API
 *
 * See: https://blog.videojs.com/feature-spotlight-advanced-plugins/
 */

var Skip = /*#__PURE__*/function (_Plugin) {
  _inheritsLoose(Skip, _Plugin);

  /**
   * Create a Skip plugin instance.
   *
   * @param  {Player} player
   *         A Video.js Player instance.
   *
   * @param  {Object} [options]
   *         An optional options object.
   *
   *         While not a core part of the Video.js plugin architecture, a
   *         second argument of options is a convenient way to accept inputs
   *         from your plugin's caller.
   */
  function Skip(player, options) {
    var _this;

    // the parent class will add player under this.player
    _this = _Plugin.call(this, player) || this;
    _this.options = videojs.mergeOptions(defaults, options);

    _this.player.ready(function () {
      _this.skipButton = new SkipButton(_this.player, _this.options);

      _this.player.addClass("vjs-fg-skip");

      _this.player.addChild(_this.skipButton);

      videojs.log("Create Skip-Button");
    });

    return _this;
  }

  return Skip;
}(Plugin); // Define default values for the plugin's `state` object here.


Skip.defaultState = {}; // Include the version number.

Skip.VERSION = version; // Register the plugin with video.js.

videojs.registerPlugin("skipButton", Skip);

export { Skip as default };
