/*! @name videojs-rotate-player-plugin @version 1.0.1 @license Apache-2.0 */
(function (videojs,QUnit,sinon) {
	'use strict';

	videojs = videojs && videojs.hasOwnProperty('default') ? videojs['default'] : videojs;
	QUnit = QUnit && QUnit.hasOwnProperty('default') ? QUnit['default'] : QUnit;
	sinon = sinon && sinon.hasOwnProperty('default') ? sinon['default'] : sinon;

	var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	var empty = {};

	var empty$1 = /*#__PURE__*/Object.freeze({
		default: empty
	});

	var minDoc = ( empty$1 && empty ) || empty$1;

	var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal :
	    typeof window !== 'undefined' ? window : {};


	var doccy;

	if (typeof document !== 'undefined') {
	    doccy = document;
	} else {
	    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

	    if (!doccy) {
	        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
	    }
	}

	var document_1 = doccy;

	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}

	var version = "1.0.1";

	var cov_mpa2gx8kr = function () {
	  var path = '/Users/wanglei/Project/github/videojs-rotate-plugin/src/plugin.js',
	      hash = '2163926b2c6b00a81c863b93a4a29f66331ac2f5',
	      global = new Function('return this')(),
	      gcv = '__coverage__',
	      coverageData = {
	    path: '/Users/wanglei/Project/github/videojs-rotate-plugin/src/plugin.js',
	    statementMap: {
	      '0': {
	        start: {
	          line: 4,
	          column: 15
	        },
	        end: {
	          line: 4,
	          column: 42
	        }
	      },
	      '1': {
	        start: {
	          line: 5,
	          column: 15
	        },
	        end: {
	          line: 5,
	          column: 45
	        }
	      },
	      '2': {
	        start: {
	          line: 8,
	          column: 17
	        },
	        end: {
	          line: 8,
	          column: 19
	        }
	      },
	      '3': {
	        start: {
	          line: 25,
	          column: 4
	        },
	        end: {
	          line: 25,
	          column: 27
	        }
	      },
	      '4': {
	        start: {
	          line: 26,
	          column: 4
	        },
	        end: {
	          line: 26,
	          column: 31
	        }
	      },
	      '5': {
	        start: {
	          line: 27,
	          column: 4
	        },
	        end: {
	          line: 27,
	          column: 31
	        }
	      },
	      '6': {
	        start: {
	          line: 31,
	          column: 4
	        },
	        end: {
	          line: 31,
	          column: 45
	        }
	      },
	      '7': {
	        start: {
	          line: 35,
	          column: 4
	        },
	        end: {
	          line: 35,
	          column: 57
	        }
	      },
	      '8': {
	        start: {
	          line: 36,
	          column: 25
	        },
	        end: {
	          line: 36,
	          column: 52
	        }
	      },
	      '9': {
	        start: {
	          line: 38,
	          column: 17
	        },
	        end: {
	          line: 38,
	          column: 51
	        }
	      },
	      '10': {
	        start: {
	          line: 40,
	          column: 4
	        },
	        end: {
	          line: 42,
	          column: 5
	        }
	      },
	      '11': {
	        start: {
	          line: 41,
	          column: 6
	        },
	        end: {
	          line: 41,
	          column: 33
	        }
	      },
	      '12': {
	        start: {
	          line: 44,
	          column: 4
	        },
	        end: {
	          line: 44,
	          column: 73
	        }
	      },
	      '13': {
	        start: {
	          line: 45,
	          column: 4
	        },
	        end: {
	          line: 45,
	          column: 88
	        }
	      },
	      '14': {
	        start: {
	          line: 46,
	          column: 4
	        },
	        end: {
	          line: 46,
	          column: 54
	        }
	      },
	      '15': {
	        start: {
	          line: 72,
	          column: 4
	        },
	        end: {
	          line: 72,
	          column: 18
	        }
	      },
	      '16': {
	        start: {
	          line: 74,
	          column: 4
	        },
	        end: {
	          line: 74,
	          column: 59
	        }
	      },
	      '17': {
	        start: {
	          line: 77,
	          column: 4
	        },
	        end: {
	          line: 77,
	          column: 22
	        }
	      },
	      '18': {
	        start: {
	          line: 79,
	          column: 4
	        },
	        end: {
	          line: 83,
	          column: 7
	        }
	      },
	      '19': {
	        start: {
	          line: 80,
	          column: 6
	        },
	        end: {
	          line: 80,
	          column: 55
	        }
	      },
	      '20': {
	        start: {
	          line: 81,
	          column: 6
	        },
	        end: {
	          line: 81,
	          column: 42
	        }
	      },
	      '21': {
	        start: {
	          line: 82,
	          column: 6
	        },
	        end: {
	          line: 82,
	          column: 72
	        }
	      },
	      '22': {
	        start: {
	          line: 90,
	          column: 19
	        },
	        end: {
	          line: 90,
	          column: 30
	        }
	      },
	      '23': {
	        start: {
	          line: 91,
	          column: 23
	        },
	        end: {
	          line: 97,
	          column: 5
	        }
	      },
	      '24': {
	        start: {
	          line: 99,
	          column: 4
	        },
	        end: {
	          line: 99,
	          column: 31
	        }
	      },
	      '25': {
	        start: {
	          line: 100,
	          column: 4
	        },
	        end: {
	          line: 107,
	          column: 5
	        }
	      },
	      '26': {
	        start: {
	          line: 101,
	          column: 6
	        },
	        end: {
	          line: 106,
	          column: 7
	        }
	      },
	      '27': {
	        start: {
	          line: 102,
	          column: 8
	        },
	        end: {
	          line: 105,
	          column: 9
	        }
	      },
	      '28': {
	        start: {
	          line: 103,
	          column: 10
	        },
	        end: {
	          line: 103,
	          column: 32
	        }
	      },
	      '29': {
	        start: {
	          line: 104,
	          column: 10
	        },
	        end: {
	          line: 104,
	          column: 16
	        }
	      },
	      '30': {
	        start: {
	          line: 111,
	          column: 26
	        },
	        end: {
	          line: 111,
	          column: 42
	        }
	      },
	      '31': {
	        start: {
	          line: 112,
	          column: 25
	        },
	        end: {
	          line: 112,
	          column: 76
	        }
	      },
	      '32': {
	        start: {
	          line: 113,
	          column: 26
	        },
	        end: {
	          line: 113,
	          column: 79
	        }
	      },
	      '33': {
	        start: {
	          line: 115,
	          column: 4
	        },
	        end: {
	          line: 115,
	          column: 44
	        }
	      },
	      '34': {
	        start: {
	          line: 116,
	          column: 4
	        },
	        end: {
	          line: 116,
	          column: 91
	        }
	      },
	      '35': {
	        start: {
	          line: 117,
	          column: 4
	        },
	        end: {
	          line: 117,
	          column: 92
	        }
	      },
	      '36': {
	        start: {
	          line: 122,
	          column: 0
	        },
	        end: {
	          line: 122,
	          column: 37
	        }
	      },
	      '37': {
	        start: {
	          line: 125,
	          column: 0
	        },
	        end: {
	          line: 125,
	          column: 37
	        }
	      },
	      '38': {
	        start: {
	          line: 128,
	          column: 0
	        },
	        end: {
	          line: 128,
	          column: 62
	        }
	      },
	      '39': {
	        start: {
	          line: 131,
	          column: 0
	        },
	        end: {
	          line: 131,
	          column: 65
	        }
	      }
	    },
	    fnMap: {
	      '0': {
	        name: '(anonymous_0)',
	        decl: {
	          start: {
	            line: 24,
	            column: 2
	          },
	          end: {
	            line: 24,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 24,
	            column: 31
	          },
	          end: {
	            line: 28,
	            column: 3
	          }
	        },
	        line: 24
	      },
	      '1': {
	        name: '(anonymous_1)',
	        decl: {
	          start: {
	            line: 30,
	            column: 2
	          },
	          end: {
	            line: 30,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 30,
	            column: 18
	          },
	          end: {
	            line: 32,
	            column: 3
	          }
	        },
	        line: 30
	      },
	      '2': {
	        name: '(anonymous_2)',
	        decl: {
	          start: {
	            line: 34,
	            column: 2
	          },
	          end: {
	            line: 34,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 34,
	            column: 16
	          },
	          end: {
	            line: 47,
	            column: 3
	          }
	        },
	        line: 34
	      },
	      '3': {
	        name: '(anonymous_3)',
	        decl: {
	          start: {
	            line: 70,
	            column: 2
	          },
	          end: {
	            line: 70,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 70,
	            column: 31
	          },
	          end: {
	            line: 84,
	            column: 3
	          }
	        },
	        line: 70
	      },
	      '4': {
	        name: '(anonymous_4)',
	        decl: {
	          start: {
	            line: 79,
	            column: 22
	          },
	          end: {
	            line: 79,
	            column: 23
	          }
	        },
	        loc: {
	          start: {
	            line: 79,
	            column: 28
	          },
	          end: {
	            line: 83,
	            column: 5
	          }
	        },
	        line: 79
	      },
	      '5': {
	        name: '(anonymous_5)',
	        decl: {
	          start: {
	            line: 89,
	            column: 2
	          },
	          end: {
	            line: 89,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 89,
	            column: 33
	          },
	          end: {
	            line: 108,
	            column: 3
	          }
	        },
	        line: 89
	      },
	      '6': {
	        name: '(anonymous_6)',
	        decl: {
	          start: {
	            line: 110,
	            column: 2
	          },
	          end: {
	            line: 110,
	            column: 3
	          }
	        },
	        loc: {
	          start: {
	            line: 110,
	            column: 18
	          },
	          end: {
	            line: 118,
	            column: 3
	          }
	        },
	        line: 110
	      }
	    },
	    branchMap: {
	      '0': {
	        loc: {
	          start: {
	            line: 38,
	            column: 17
	          },
	          end: {
	            line: 38,
	            column: 51
	          }
	        },
	        type: 'cond-expr',
	        locations: [{
	          start: {
	            line: 38,
	            column: 44
	          },
	          end: {
	            line: 38,
	            column: 45
	          }
	        }, {
	          start: {
	            line: 38,
	            column: 48
	          },
	          end: {
	            line: 38,
	            column: 51
	          }
	        }],
	        line: 38
	      },
	      '1': {
	        loc: {
	          start: {
	            line: 40,
	            column: 4
	          },
	          end: {
	            line: 42,
	            column: 5
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 40,
	            column: 4
	          },
	          end: {
	            line: 42,
	            column: 5
	          }
	        }, {
	          start: {
	            line: 40,
	            column: 4
	          },
	          end: {
	            line: 42,
	            column: 5
	          }
	        }],
	        line: 40
	      },
	      '2': {
	        loc: {
	          start: {
	            line: 44,
	            column: 29
	          },
	          end: {
	            line: 44,
	            column: 72
	          }
	        },
	        type: 'cond-expr',
	        locations: [{
	          start: {
	            line: 44,
	            column: 56
	          },
	          end: {
	            line: 44,
	            column: 57
	          }
	        }, {
	          start: {
	            line: 44,
	            column: 60
	          },
	          end: {
	            line: 44,
	            column: 72
	          }
	        }],
	        line: 44
	      },
	      '3': {
	        loc: {
	          start: {
	            line: 100,
	            column: 4
	          },
	          end: {
	            line: 107,
	            column: 5
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 100,
	            column: 4
	          },
	          end: {
	            line: 107,
	            column: 5
	          }
	        }, {
	          start: {
	            line: 100,
	            column: 4
	          },
	          end: {
	            line: 107,
	            column: 5
	          }
	        }],
	        line: 100
	      },
	      '4': {
	        loc: {
	          start: {
	            line: 102,
	            column: 8
	          },
	          end: {
	            line: 105,
	            column: 9
	          }
	        },
	        type: 'if',
	        locations: [{
	          start: {
	            line: 102,
	            column: 8
	          },
	          end: {
	            line: 105,
	            column: 9
	          }
	        }, {
	          start: {
	            line: 102,
	            column: 8
	          },
	          end: {
	            line: 105,
	            column: 9
	          }
	        }],
	        line: 102
	      }
	    },
	    s: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0,
	      '6': 0,
	      '7': 0,
	      '8': 0,
	      '9': 0,
	      '10': 0,
	      '11': 0,
	      '12': 0,
	      '13': 0,
	      '14': 0,
	      '15': 0,
	      '16': 0,
	      '17': 0,
	      '18': 0,
	      '19': 0,
	      '20': 0,
	      '21': 0,
	      '22': 0,
	      '23': 0,
	      '24': 0,
	      '25': 0,
	      '26': 0,
	      '27': 0,
	      '28': 0,
	      '29': 0,
	      '30': 0,
	      '31': 0,
	      '32': 0,
	      '33': 0,
	      '34': 0,
	      '35': 0,
	      '36': 0,
	      '37': 0,
	      '38': 0,
	      '39': 0
	    },
	    f: {
	      '0': 0,
	      '1': 0,
	      '2': 0,
	      '3': 0,
	      '4': 0,
	      '5': 0,
	      '6': 0
	    },
	    b: {
	      '0': [0, 0],
	      '1': [0, 0],
	      '2': [0, 0],
	      '3': [0, 0],
	      '4': [0, 0]
	    },
	    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
	  },
	      coverage = global[gcv] || (global[gcv] = {});

	  if (coverage[path] && coverage[path].hash === hash) {
	    return coverage[path];
	  }

	  coverageData.hash = hash;
	  return coverage[path] = coverageData;
	}();
	var Plugin = (cov_mpa2gx8kr.s[0]++, videojs.getPlugin('plugin'));
	var Button = (cov_mpa2gx8kr.s[1]++, videojs.getComponent('button')); // Default options for the plugin.

	var defaults = (cov_mpa2gx8kr.s[2]++, {});

	var RotateButton =
	/*#__PURE__*/
	function (_Button) {
	  _inheritsLoose(RotateButton, _Button);

	  /**
	  * Create rotate button.
	  *
	  * @param  {Player} player
	  *         A Video.js Player instance.
	  *
	  * @param  {Object} [options]
	  *         An optional options object.
	  *
	  *         While not a core part of the Video.js plugin architecture, a
	  *         second argument of options is a convenient way to accept inputs
	  *         from your plugin's caller.
	  */
	  function RotateButton(player, options) {
	    var _this;

	    cov_mpa2gx8kr.f[0]++;
	    cov_mpa2gx8kr.s[3]++;
	    _this = _Button.call(this, player, options) || this;
	    cov_mpa2gx8kr.s[4]++;
	    _this._currentRotateDeg = 0;
	    cov_mpa2gx8kr.s[5]++;

	    _this.controlText('Rotate');

	    return _this;
	  }

	  var _proto = RotateButton.prototype;

	  _proto.buildCSSClass = function buildCSSClass() {
	    cov_mpa2gx8kr.f[1]++;
	    cov_mpa2gx8kr.s[6]++;
	    return 'vjs-control vjs-button rotate-0';
	  };

	  _proto.handleClick = function handleClick() {
	    cov_mpa2gx8kr.f[2]++;
	    cov_mpa2gx8kr.s[7]++;
	    this.removeClass("rotate-" + this._currentRotateDeg);
	    var tmpRotateDeg = (cov_mpa2gx8kr.s[8]++, this._currentRotateDeg + 90);
	    var zoom = (cov_mpa2gx8kr.s[9]++, tmpRotateDeg % 180 === 0 ? (cov_mpa2gx8kr.b[0][0]++, 1) : (cov_mpa2gx8kr.b[0][1]++, 0.5));
	    cov_mpa2gx8kr.s[10]++;

	    if (tmpRotateDeg % 360 === 0) {
	      cov_mpa2gx8kr.b[1][0]++;
	      cov_mpa2gx8kr.s[11]++;
	      this._currentRotateDeg = 0;
	    } else {
	      cov_mpa2gx8kr.b[1][1]++;
	    }

	    cov_mpa2gx8kr.s[12]++;
	    this._currentRotateDeg = tmpRotateDeg % 360 === 0 ? (cov_mpa2gx8kr.b[2][0]++, 0) : (cov_mpa2gx8kr.b[2][1]++, tmpRotateDeg);
	    cov_mpa2gx8kr.s[13]++;
	    this.player().rotatePlayerPlugin().rotate({
	      rotate: this._currentRotateDeg,
	      zoom: zoom
	    });
	    cov_mpa2gx8kr.s[14]++;
	    this.addClass("rotate-" + this._currentRotateDeg);
	  };

	  return RotateButton;
	}(Button);
	/**
	* An advanced Video.js plugin. For more information on the API
	*
	* See: https://blog.videojs.com/feature-spotlight-advanced-plugins/
	*/


	var RotatePlayerPlugin =
	/*#__PURE__*/
	function (_Plugin) {
	  _inheritsLoose(RotatePlayerPlugin, _Plugin);

	  /**
	  * Create a RotatePlayerPlugin plugin instance.
	  *
	  * @param  {Player} player
	  *         A Video.js Player instance.
	  *
	  * @param  {Object} [options]
	  *         An optional options object.
	  *
	  *         While not a core part of the Video.js plugin architecture, a
	  *         second argument of options is a convenient way to accept inputs
	  *         from your plugin's caller.
	  */
	  function RotatePlayerPlugin(player, options) {
	    var _this2;

	    cov_mpa2gx8kr.f[3]++;
	    cov_mpa2gx8kr.s[15]++; // the parent class will add player under this.player

	    _this2 = _Plugin.call(this, player) || this;
	    cov_mpa2gx8kr.s[16]++;
	    _this2.options = videojs.mergeOptions(defaults, options); // Browser support rotate css property.

	    cov_mpa2gx8kr.s[17]++;
	    _this2._prop = null;
	    cov_mpa2gx8kr.s[18]++;

	    _this2.player.ready(function () {
	      cov_mpa2gx8kr.f[4]++;
	      cov_mpa2gx8kr.s[19]++;

	      _this2.player.addClass('vjs-rotate-player-plugin');

	      cov_mpa2gx8kr.s[20]++;

	      _this2.findSupportTransformProperty();

	      cov_mpa2gx8kr.s[21]++;

	      _this2.player.getChild('controlBar').addChild('rotatePlayerButton');
	    });

	    return _this2;
	  }
	  /**
	  * Find current browser supported transform css property.
	  */


	  var _proto2 = RotatePlayerPlugin.prototype;

	  _proto2.findSupportTransformProperty = function findSupportTransformProperty() {
	    cov_mpa2gx8kr.f[5]++;
	    var player = (cov_mpa2gx8kr.s[22]++, this.player);
	    var properties = (cov_mpa2gx8kr.s[23]++, ['transform', 'WebkitTransform', 'MozTransform', 'msTransform', 'OTransform']);
	    cov_mpa2gx8kr.s[24]++;
	    this._prop = properties[0];
	    cov_mpa2gx8kr.s[25]++;

	    if (typeof player.style !== 'undefined') {
	      cov_mpa2gx8kr.b[3][0]++;
	      cov_mpa2gx8kr.s[26]++;

	      for (var _i = 0; _i < properties.length; _i++) {
	        var property = properties[_i];
	        cov_mpa2gx8kr.s[27]++;

	        if (typeof player.style[property] !== 'undefined') {
	          cov_mpa2gx8kr.b[4][0]++;
	          cov_mpa2gx8kr.s[28]++;
	          this._prop = property;
	          cov_mpa2gx8kr.s[29]++;
	          break;
	        } else {
	          cov_mpa2gx8kr.b[4][1]++;
	        }
	      }
	    } else {
	      cov_mpa2gx8kr.b[3][1]++;
	    }
	  };

	  _proto2.rotate = function rotate(options) {
	    cov_mpa2gx8kr.f[6]++;
	    var targetElement = (cov_mpa2gx8kr.s[30]++, this.player.el());
	    var videoElement = (cov_mpa2gx8kr.s[31]++, targetElement.getElementsByClassName('vjs-tech')[0]);
	    var posterElement = (cov_mpa2gx8kr.s[32]++, targetElement.getElementsByClassName('vjs-poster')[0]);
	    cov_mpa2gx8kr.s[33]++;
	    targetElement.style.overflow = 'hidden';
	    cov_mpa2gx8kr.s[34]++;
	    videoElement.style[this._prop] = "scale(" + options.zoom + ") rotate(" + options.rotate + "deg)";
	    cov_mpa2gx8kr.s[35]++;
	    posterElement.style[this._prop] = "scale(" + options.zoom + ") rotate(" + options.rotate + "deg)";
	  };

	  return RotatePlayerPlugin;
	}(Plugin); // Define default values for the plugin's `state` object here.


	cov_mpa2gx8kr.s[36]++;
	RotatePlayerPlugin.defaultState = {}; // Include the version number.

	cov_mpa2gx8kr.s[37]++;
	RotatePlayerPlugin.VERSION = version; // Register button.

	cov_mpa2gx8kr.s[38]++;
	videojs.registerComponent('rotatePlayerButton', RotateButton); // Register the plugin with video.js.

	cov_mpa2gx8kr.s[39]++;
	videojs.registerPlugin('rotatePlayerPlugin', RotatePlayerPlugin);

	var Player = videojs.getComponent('Player');
	QUnit.test('the environment is sane', function (assert) {
	  assert.strictEqual(typeof Array.isArray, 'function', 'es5 exists');
	  assert.strictEqual(typeof sinon, 'object', 'sinon exists');
	  assert.strictEqual(typeof videojs, 'function', 'videojs exists');
	  assert.strictEqual(typeof RotatePlayerPlugin, 'function', 'plugin is a function');
	});
	QUnit.module('videojs-rotate-player-plugin', {
	  beforeEach: function beforeEach() {
	    // Mock the environment's timers because certain things - particularly
	    // player readiness - are asynchronous in video.js 5. This MUST come
	    // before any player is created; otherwise, timers could get created
	    // with the actual timer methods!
	    this.clock = sinon.useFakeTimers();
	    this.fixture = document_1.getElementById('qunit-fixture');
	    this.video = document_1.createElement('video');
	    this.fixture.appendChild(this.video);
	    this.player = videojs(this.video);
	  },
	  afterEach: function afterEach() {
	    this.player.dispose();
	    this.clock.restore();
	  }
	});
	QUnit.test('registers itself with video.js', function (assert) {
	  assert.expect(2);
	  assert.strictEqual(typeof Player.prototype.rotatePlayerPlugin, 'function', 'videojs-rotate-player-plugin plugin was registered');
	  this.player.rotatePlayerPlugin(); // Tick the clock forward enough to trigger the player to be "ready".

	  this.clock.tick(1);
	  assert.ok(this.player.hasClass('vjs-rotate-player-plugin'), 'the plugin adds a class to the player');
	});

}(videojs,QUnit,sinon));
